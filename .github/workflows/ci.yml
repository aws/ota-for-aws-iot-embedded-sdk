name: CI Checks

on:
  push:
    branches: ["**"]
  pull_request:
    branches:
      - main
      - development
  workflow_dispatch:

jobs:
  compiler-warnings:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Check warnings
        run: |
          cmake -S test -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS_INIT='-DLOG_LEVEL=LOG_LEVEL_DEBUG' \
          -DCMAKE_C_FLAGS='-Wall -Wextra -Werror'
          cmake --build build

  complexity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: sudo apt-get install complexity
      - name: Complexity
        run: |
          find source/ -iname '*.c' |\
          xargs complexity --scores --threshold=0 --horrid-threshold=8

  unittest:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          cmake -S test -B build -DCMAKE_BUILD_TYPE=Debug
          cmake --build build
      - name: Test
        run: |
          cd build/
          ctest -E system --output-on-failure
          cd ..

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Clone This Repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          sudo apt-get install -y lcov
          cmake -S test -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build
      - name: Run Coverage
        run: |
          cmake --build build/ --target coverage
      - name: Check Coverage
        env:
          MIN_LINE_COVERAGE: 90
          MIN_BRANCH_COVERAGE: 70
        run: |
          lcov --rc lcov_branch_coverage=1 --list build/coverage.info | tee cov_summary.txt
          LINE_COVERAGE=$(cat cov_summary.txt | tail -n 1 | cut -d '|' -f 2 | sed -n "s/\([^%]*\)%.*/\1/p")
          BRANCH_COVERAGE=$(cat cov_summary.txt | tail -n 1 | cut -d '|' -f 4 | sed -n "s/\([^%]*\)%.*/\1/p")
          RESULT=0
          echo "Required line coverage: $MIN_LINE_COVERAGE%, actual: $LINE_COVERAGE%"
          if [[ $(echo "$LINE_COVERAGE < $MIN_LINE_COVERAGE" | bc) -ne 0 ]]; then
            echo "Line Coverage is too low."
            RESULT=1
          fi
          echo "Required branch coverage: $MIN_BRANCH_COVERAGE%, actual: $BRANCH_COVERAGE%"
          if [[ $(echo "$BRANCH_COVERAGE < $MIN_BRANCH_COVERAGE" | bc) -ne 0 ]]; then
            echo "Branch Coverage is too low."
            RESULT=1
          fi
          exit $RESULT

  doxygen:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run doxygen build
        uses: FreeRTOS/CI-CD-Github-Actions/doxygen@main
        with:
          path: ./

  spell-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Parent Repo
        uses: actions/checkout@v2
        with:
          ref: main
          repository: aws/aws-iot-device-sdk-embedded-C
      - name: Clone This Repo
        uses: actions/checkout@v2
        with:
          path: tmp
      - name: Install spell
        run: |
          sudo apt-get install spell
          sudo apt-get install util-linux
      - name: Check spelling
        run: |
          PATH=$PATH:$PWD/tools/spell
          find-unknown-comment-words --directory tmp/ --lexicon tmp/tools/lexicon.txt
          if [ $? -ne "0" ]; then
            exit 1
          fi

  formatting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Uncrustify
        run: sudo apt-get install uncrustify
      - name: Run Uncrustify
        run: find . -iname "*.[hc]" -exec uncrustify --check -c tools/uncrustify.cfg {} +
      - name: Check For Trailing Whitespace
        run: |
          set +me
          shopt -s lastpipe
          found=0
          git ls-files | xargs file | sed -n '/ASCII/s/:.*//p' | while read f; do [[ -f $f ]] && grep -H '[[:blank:]]$' $f && let found++; done
          (( found > 0 )) && echo 'Files have trailing whitespace.'
          exit $found

  git-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Checkout awslabs/git-secrets
        uses: actions/checkout@v2
        with:
          repository: awslabs/git-secrets
          ref: master
          path: git-secrets
      - name: Install git-secrets
        run: cd git-secrets && sudo make install && cd ..
      - name: Run git-secrets
        run: |
          git-secrets --register-aws
          git-secrets --scan

  memory_statistics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'recursive'
      - name: Measure sizes
        uses: FreeRTOS/CI-CD-Github-Actions/memory_statistics@main
        with:
            config: .github/memory_statistics_config.json
            check_against: docs/doxygen/include/size_table.html
