/**
@page ota_porting Porting Guide
@brief Guide for porting OTA to a new platform.

A port to a new platform must provide the following components:
1. [Ports for PAL](@ref ota_porting_pal)
2. [OS Interface](@ref ota_porting_os)
3. [MQTT Interface](@ref ota_porting_mqtt)
4. [HTTP Interface](@ref ota_porting_http)

@section ota_porting_pal OTA PAL requirements:
@brief The OTA library relies on portable abstraction layer (PAL) callbacks that much be implemented to store the download as it is streamed.

@see [OTA PAL documentation](@ref ota_pal_interface)
The OTA PAL API used by the OTA library is defined in @ref ota_platform_interface.h.
A port must implement functions corresponding to the following function pointers:
- [OTA PAL Abort](@ref OtaPalAbort_t): A function that aborts access to an existing open file.
@code
OtaPalStatus_t ( * OtaPalAbort_t )(
    OtaFileContext_t * const pFileContext
);
@endcode
- [OTA PAL Create File](@ref OtaPalCreateFileForRx_t): A function to create a new file for receiving data chunks.
@code
OtaPalStatus_t (* OtaPalCreateFileForRx_t)(
    OtaFileContext_t * const pFileContext
);
@endcode
- [OTA PAL Close File](@ref OtaPalCloseFile_t): A function to authenticate and close a file used for receiving data.
@code
OtaPalStatus_t ( * OtaPalCloseFile_t )(
    OtaFileContext_t * const pFileContext
);
@endcode
- [OTA PAL Write Block](@ref OtaPalWriteBlock_t): A function to write a block of data to the specified file at the given offset.
@code
int16_t ( * OtaPalWriteBlock_t )( 
    OtaFileContext_t * const pFileContext,
    uint32_t offset,
    uint8_t * const pData,
    uint32_t blockSize
);
@endcode
- [OTA PAL Activate New Image](@ref OtaPalActivateNewImage_t): A function to activate the newest device image received via OTA.
@code
typedef OtaPalStatus_t ( * OtaPalActivateNewImage_t )(
    OtaFileContext_t * const pFileContext
);
@endcode
- [OTA PAL Reset Device](@ref OtaPalResetDevice_t): A function to reset the device and cause a reboot of the system.
@code
OtaPalStatus_t ( * OtaPalResetDevice_t )(
    OtaFileContext_t * const pFileContext
);
@endcode
- [OTA PAL Set Platform Image State](@ref OtaPalSetPlatformImageState_t): A function to set the state of the OTA update image.
@code
OtaPalStatus_t ( * OtaPalSetPlatformImageState_t )(
    OtaFileContext_t * const pFileContext,
    OtaImageState_t eState
);
@endcode
- [OTA PAL Get Platform Image State](@ref OtaPalGetPlatformImageState_t): A function to get the state of the OTA update image.
@code
typedef OtaPalImageState_t ( * OtaPalGetPlatformImageState_t )(
    OtaFileContext_t * const pFileContext
);
@endcode

@section ota_porting_os OTA OS requirements:
@brief OTA OS requirements

@section ota_porting_mqtt OTA MQTT requirements:
@brief OTA MQTT requirements

@section ota_porting_http OTA HTTP requirements:
@brief OTA HTTP requirements
*/
